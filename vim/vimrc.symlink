" load plugins from vundle
source ~/.vim/plugins.vim

set autoread
inoremap kj <ESC>
let mapleader=","
color smyck
nmap <leader>p :source ~/.presrc<CR>

syntax on
filetype plugin on

set ruler
set ai
set vb t_vb=""
set nu
set backspace=indent,eol,start
highlight LineNr ctermfg=lightgrey ctermbg=darkgray

autocmd StdinReadPre * let s:std_in=1
" autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" faster redrawing
set ttyfast

" code folding
set foldmethod=syntax
set foldnestmax=10
set nofoldenable
set foldlevel=1

" line wrapping
set wrap
" set wrapmargin=8
set linebreak
set showbreak=…


" Mapping save
nmap <leader>, :w<cr>

map <leader>t :tabnew<CR>

map <C-n> :NERDTreeToggle<CR>
command WQ wq
command Wq wq
command W w
command Q q

" System Clipboard
set clipboard=unnamed

"Invisible Characters
set listchars=tab:▸\ ,eol:¬
" set list
set hlsearch
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59

" No scrollbars in MacVim
set guioptions-=L
set guioptions-=r

let CoqIDE_coqtop = "/usr/local/bin/coqtop"
" let g:CoqIDEDefaultMap = 1

" Maps Coquille commands to <F2> (Undo), <F3> (Next), <F4> (ToCursor)
let g:coquille_auto_move = 'true'
au FileType coq call coquille#FNMapping()
map <F8> :CoqLaunch<CR>
map <F9> :CoqKill<CR>

" Development
autocmd filetype c nnoremap <F4> :w <bar> exec '!gcc '.shellescape('%').' -o '.shellescape('%:r').' && ./'.shellescape('%:r')<CR>
autocmd filetype cpp nnoremap <F4> :w <bar> exec '!g++ '.shellescape('%').' -o '.shellescape('%:r').' && ./'.shellescape('%:r')<CR>
nmap <leader>z :call VimuxRunCommand("pdflatex document.tex && echo Erfolg")<cr>
nmap <leader>l :call VimuxRunCommand("open -a Safari index.html")<cr>
nmap <leader>i :call VimuxRunCommand("makeindex -s document.ist -o document.gls document.glo")<cr>

" Auto close tags
:iabbrev </ </<C-X><C-O>

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
set laststatus=2

" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
